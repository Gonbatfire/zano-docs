"use strict";(self.webpackChunkzano_docs=self.webpackChunkzano_docs||[]).push([[5179],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=d(n),h=r,m=c["".concat(s,".").concat(h)]||c[h]||p[h]||o;return n?a.createElement(m,i(i({ref:t},u),{},{components:n})):a.createElement(m,i({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:r,i[1]=l;for(var d=2;d<o;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},8610:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var a=n(7462),r=(n(7294),n(3905));const o={},i="JWT Authentication Guide",l={unversionedId:"build/exchange-guidelines/jwt-guide",id:"build/exchange-guidelines/jwt-guide",title:"JWT Authentication Guide",description:"What is JWT?",source:"@site/docs/build/exchange-guidelines/jwt-guide.md",sourceDirName:"build/exchange-guidelines",slug:"/build/exchange-guidelines/jwt-guide",permalink:"/zano-docs/docs/build/exchange-guidelines/jwt-guide",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"buildSidebar",previous:{title:"Integrated addresses for exchanges",permalink:"/zano-docs/docs/build/exchange-guidelines/integrated-addresses-for-exchanges"},next:{title:"Hi-Load Servers (WARP-mode)",permalink:"/zano-docs/docs/build/exchange-guidelines/production-node"}},s={},d=[{value:"What is JWT?",id:"what-is-jwt",level:2},{value:"Use Case in Our Project",id:"use-case-in-our-project",level:2},{value:"Code example on nodejs",id:"code-example-on-nodejs",level:2},{value:"Dependencies",id:"dependencies",level:3},{value:"JWT Generation Flow",id:"jwt-generation-flow",level:2},{value:"1. Shared Secret",id:"1-shared-secret",level:3},{value:"2. Create JWT Token",id:"2-create-jwt-token",level:3},{value:"3. Generate Body Hash",id:"3-generate-body-hash",level:3},{value:"4. Build Payload",id:"4-build-payload",level:3},{value:"5. Generate Final JWT",id:"5-generate-final-jwt",level:3},{value:"Sending the Authenticated Request",id:"sending-the-authenticated-request",level:2},{value:"Notes",id:"notes",level:2},{value:"Example JSON-RPC Request",id:"example-json-rpc-request",level:2},{value:"Summary",id:"summary",level:2}],u={toc:d},c="wrapper";function p(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"jwt-authentication-guide"},"JWT Authentication Guide"),(0,r.kt)("h2",{id:"what-is-jwt"},"What is JWT?"),(0,r.kt)("p",null,"JWT (JSON Web Token) is a compact, URL-safe means of representing claims to be transferred between two parties. It is widely used for authentication and authorization in web applications."),(0,r.kt)("p",null,"A JWT typically consists of three parts:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Header")," \u2013 contains the type of the token (",(0,r.kt)("inlineCode",{parentName:"li"},"JWT"),") and the signing algorithm (",(0,r.kt)("inlineCode",{parentName:"li"},"HS256"),", etc.)."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Payload")," \u2013 contains the claims, i.e., data such as ",(0,r.kt)("inlineCode",{parentName:"li"},"user"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"exp")," (expiration), etc."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Signature")," \u2013 a hash of the header and payload, signed using a secret key.")),(0,r.kt)("p",null,"The final token is encoded as:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"header.payload.signature\n")),(0,r.kt)("h2",{id:"use-case-in-our-project"},"Use Case in Our Project"),(0,r.kt)("p",null,"We use JWT authentication to secure HTTP requests to our local JSON-RPC API betweedn Zano desktop App and Zano Extension (Zano Companion). Each request includes a signed JWT in the ",(0,r.kt)("inlineCode",{parentName:"p"},"Zano-Access-Token")," header, which is verified by the server.\nYou can enable JWT authentification in simplewallet as well by adding ",(0,r.kt)("inlineCode",{parentName:"p"},"--jwt-secret=hsjejkcdskndspo230XASIijksk123i9x5")," when simplewallet run in server mode (with --rpc-bind-port=PORT_NUM option)."),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"code-example-on-nodejs"},"Code example on nodejs"),(0,r.kt)("p",null,"Here is a review of ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/hyle-team/zano/blob/master/utils/JS/JWT/example.js"},"example")," of using JWT auth to call getbalance function from wallet."),(0,r.kt)("h3",{id:"dependencies"},"Dependencies"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.npmjs.com/package/axios"},(0,r.kt)("inlineCode",{parentName:"a"},"axios"))," \u2013 for sending HTTP requests."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.npmjs.com/package/node-forge"},(0,r.kt)("inlineCode",{parentName:"a"},"node-forge"))," \u2013 for cryptographic operations (HMAC, SHA-256, etc.).")),(0,r.kt)("p",null,"Install them:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install axios node-forge\n")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"jwt-generation-flow"},"JWT Generation Flow"),(0,r.kt)("h3",{id:"1-shared-secret"},"1. Shared Secret"),(0,r.kt)("p",null,"Define your shared JWT secret (must match the server's configuration):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const JWT_SECRET = 'hiwejkcddkndspo230XASIijksk123i9x5';\n")),(0,r.kt)("h3",{id:"2-create-jwt-token"},"2. Create JWT Token"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"function createJWSToken(payload, secret) {\n  const header = { alg: 'HS256', typ: 'JWT' };\n  const encodedHeader = Buffer.from(JSON.stringify(header)).toString('base64').replace(/=/g, '');\n  const encodedPayload = Buffer.from(JSON.stringify(payload)).toString('base64').replace(/=/g, '');\n\n  const signature = forge.hmac.create();\n  signature.start('sha256', secret);\n  signature.update(`${encodedHeader}.${encodedPayload}`);\n  const encodedSignature = forge.util.encode64(signature.digest().getBytes()).replace(/=/g, '');\n\n  return `${encodedHeader}.${encodedPayload}.${encodedSignature}`;\n}\n")),(0,r.kt)("h3",{id:"3-generate-body-hash"},"3. Generate Body Hash"),(0,r.kt)("p",null,"Before creating the token, we hash the request body:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const md = forge.md.sha256.create();\nmd.update(httpBody);\nconst bodyHash = md.digest().toHex();\n")),(0,r.kt)("h3",{id:"4-build-payload"},"4. Build Payload"),(0,r.kt)("p",null,"The payload contains:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"body_hash"),": hash of the request body."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"user"),": fixed identifier."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"salt"),": random 64-character string to avoid replay attacks."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"exp"),": expiration timestamp (e.g., 60 seconds from now).")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const payload = {\n  body_hash: bodyHash,\n  user: 'zano_extension',\n  salt: generateRandomString(64),\n  exp: Math.floor(Date.now() / 1000) + 60,\n};\n")),(0,r.kt)("h3",{id:"5-generate-final-jwt"},"5. Generate Final JWT"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const token = createJWSToken(payload, JWT_SECRET);\n")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"sending-the-authenticated-request"},"Sending the Authenticated Request"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"axios.post('http://127.0.0.1:11111/json_rpc', requestData, {\n  headers: {\n    'Content-Type': 'application/json',\n    'Zano-Access-Token': token,\n  },\n})\n.then(response => {\n  console.log('Response:', response.data);\n})\n.catch(error => {\n  if (error.response) {\n    console.error('Error Response:', error.response.status, error.response.data);\n  } else {\n    console.error('Request Error:', error.message);\n  }\n});\n")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"notes"},"Notes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Ensure your server validates:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"JWT signature using the same secret (",(0,r.kt)("inlineCode",{parentName:"li"},"HS256"),")."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"exp")," is not expired."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"body_hash")," matches actual request body content."))),(0,r.kt)("li",{parentName:"ul"},"JWT tokens should be short-lived (e.g., 60 seconds) to reduce replay attack risks.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"example-json-rpc-request"},"Example JSON-RPC Request"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "id": 0,\n  "method": "getbalance",\n  "params": {}\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"summary"},"Summary"),(0,r.kt)("p",null,"JWT provides a secure and compact mechanism for authenticating API requests. In this project, we:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Hash the request body."),(0,r.kt)("li",{parentName:"ul"},"Create a signed JWT with a time-limited payload."),(0,r.kt)("li",{parentName:"ul"},"Send it in the ",(0,r.kt)("inlineCode",{parentName:"li"},"Zano-Access-Token")," HTTP header.")),(0,r.kt)("p",null,"This ensures authenticity, integrity, and freshness of every client request."))}p.isMDXComponent=!0}}]);