"use strict";(self.webpackChunkzano_docs=self.webpackChunkzano_docs||[]).push([[6664],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>b});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var d=r.createContext({}),c=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(d.Provider,{value:t},e.children)},u="mdxType",l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,d=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(n),f=o,b=u["".concat(d,".").concat(f)]||u[f]||l[f]||a;return n?r.createElement(b,i(i({ref:t},p),{},{components:n})):r.createElement(b,i({ref:t},p))}));function b(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=f;var s={};for(var d in t)hasOwnProperty.call(t,d)&&(s[d]=t[d]);s.originalType=e,s[u]="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},6152:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>l,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const a={},i=void 0,s={unversionedId:"build/rpc-api/daemon-rpc-api/decrypt_tx_details",id:"build/rpc-api/daemon-rpc-api/decrypt_tx_details",title:"decrypt_tx_details",description:"Decrypts transaction private information. Should be used only with your own local daemon for security reasons.",source:"@site/docs/build/rpc-api/daemon-rpc-api/decrypt_tx_details.md",sourceDirName:"build/rpc-api/daemon-rpc-api",slug:"/build/rpc-api/daemon-rpc-api/decrypt_tx_details",permalink:"/docs/build/rpc-api/daemon-rpc-api/decrypt_tx_details",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"buildSidebar",previous:{title:"check_keyimages.bin",permalink:"/docs/build/rpc-api/daemon-rpc-api/check_keyimages.bin"},next:{title:"find_outs_in_recent_blocks",permalink:"/docs/build/rpc-api/daemon-rpc-api/find_outs_in_recent_blocks"}},d={},c=[{value:"Request:",id:"request",level:3},{value:"Request description:",id:"request-description",level:3},{value:"Response:",id:"response",level:3},{value:"Response description:",id:"response-description",level:3}],p={toc:c},u="wrapper";function l(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Decrypts transaction private information. Should be used only with your own local daemon for security reasons."),(0,o.kt)("p",null,"URL: ",(0,o.kt)("inlineCode",{parentName:"p"},"http:://127.0.0.1:11211/json_rpc")),(0,o.kt)("h3",{id:"request"},"Request:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": 0,\n  "jsonrpc": "2.0",\n  "method": "decrypt_tx_details",\n  "params": {\n    "outputs_addresses": ["ZxDNaMeZjwCjnHuU5gUNyrP1pM3U5vckbakzzV6dEHyDYeCpW8XGLBFTshcaY8LkG9RQn7FsQx8w2JeJzJwPwuDm2NfixPAXf","ZxBvJDuQjMG9R2j4WnYUhBYNrwZPwuyXrC7FHdVmWqaESgowDvgfWtiXeNGu8Px9B24pkmjsA39fzSSiEQG1ekB225ZnrMTBp"],\n    "tx_blob": "ewogICJ2ZXJzaW9uIjogMSwgC....iAgInZpbiI6IFsgewogICAgIC",\n    "tx_id": "a6e8da986858e6825fce7a192097e6afae4e889cabe853a9c29b964985b23da8",\n    "tx_secret_key": "2e0b840e70dba386effd64c5d988622dea8c064040566e6bf035034cbb54a5c08"\n  }\n}\n')),(0,o.kt)("h3",{id:"request-description"},"Request description:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'    "outputs_addresses": Address of each of tx\'s output. Order is important and should correspond to order of tx\'s outputs. Empty strings are ignored.\n    "tx_blob": [or] base64-encoded or hex-encoded tx blob. Can be ommited if tx_id is provided.\n    "tx_id": [either] ID for a transaction if it is already in the blockchain. Can be ommited if tx_blob is provided.\n    "tx_secret_key": Hex-encoded transaction secret key.\n\n')),(0,o.kt)("h3",{id:"response"},"Response:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": 0,\n  "jsonrpc": "2.0",\n  "result": {\n    "decoded_outputs": [{\n      "address": "ZxBvJDuQjMG9R2j4WnYUhBYNrwZPwuyXrC7FHdVmWqaESgowDvgfWtiXeNGu8Px9B24pkmjsA39fzSSiEQG1ekB225ZnrMTBp",\n      "amount": 10000000000000,\n      "asset_id": "cc608f59f8080e2fbfe3c8c80eb6e6a953d47cf2d6aebd345bada3a1cab99852",\n      "out_index": 1\n    }],\n    "status": "OK",\n    "tx_in_json": "ewogICJ2ZXJzaW9uIjogMSwgC....iAgInZpbiI6IFsgewogICAgIC",\n    "verified_tx_id": "a6e8da986858e6825fce7a192097e6afae4e889cabe853a9c29b964985b23da8"\n  }\n}\n')),(0,o.kt)("h3",{id:"response-description"},"Response description:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'    "decoded_outputs": Transaction\'s decoded outputs\n      "address": Destination address.\n      "amount": Amount begin transferred.\n      "asset_id": Asset id.\n      "out_index": Index of the corresponding output in the transaction.\n    "status": Status code of operation, OK if success\n    "tx_in_json": Serialized transaction represented in JSON, encoded in Base64.\n    "verified_tx_id": (Re)calculated transaction id. Can be used in third-party proof generation.\n\n')),(0,o.kt)("sub",null,"Auto-doc built with: 2.1.8.415[f287916]"))}l.isMDXComponent=!0}}]);