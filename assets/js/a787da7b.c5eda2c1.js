"use strict";(self.webpackChunkzano_docs=self.webpackChunkzano_docs||[]).push([[7684],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>b});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,b=d["".concat(l,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(b,i(i({ref:t},p),{},{components:n})):r.createElement(b,i({ref:t},p))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5927:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:3},i="Daemon RPC Mode",s={unversionedId:"build/rpc-api/daemon-rpc",id:"build/rpc-api/daemon-rpc",title:"Daemon RPC Mode",description:"Zano command-line daemon application (zanod) can be controlled by remote procedure calls (RPC). This makes it possible to use it as a back end for user-defined services.",source:"@site/docs/build/rpc-api/daemon-rpc.md",sourceDirName:"build/rpc-api",slug:"/build/rpc-api/daemon-rpc",permalink:"/zano-docs/docs/build/rpc-api/daemon-rpc",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"buildSidebar",previous:{title:"How to call API",permalink:"/zano-docs/docs/build/rpc-api/how-to-call-api"},next:{title:"check_keyimages.bin",permalink:"/zano-docs/docs/build/rpc-api/daemon-rpc-api/check_keyimages.bin"}},l={},c=[{value:"JSON RPC BUSY response",id:"json-rpc-busy-response",level:2},{value:"Connect Legacy JSON API",id:"connect-legacy-json-api",level:2},{value:"Connect Binary RPC API",id:"connect-binary-rpc-api",level:2}],p={toc:c},d="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"daemon-rpc-mode"},"Daemon RPC Mode"),(0,a.kt)("p",null,"Zano command-line daemon application (zanod) can be controlled by remote procedure calls (RPC). This makes it possible to use it as a back end for user-defined services."),(0,a.kt)("p",null,"The daemon starts in RPC server mode by default. To specify the RPC port or bind address the user will need to run zanod with the following options:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"zanod --rpc-bind-ip RPC_IP --rpc-bind-port RPC_PORT\n")),(0,a.kt)("p",null,"where:"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"RPC_IP")," \u2014 IP address to bind RPC server to (127.0.0.1 will be used if not specified);",(0,a.kt)("br",{parentName:"p"}),"\n",(0,a.kt)("strong",{parentName:"p"},"RPC_PORT")," \u2014 TCP port for RPC server (11211 is default);"),(0,a.kt)("p",null,"All examples below are based on the assumption that the daemon is listening for RPC at 127.0.0.1:11211."),(0,a.kt)("p",null,"All amounts and balances are represented as unsigned integers and measured in atomic units \u2014 the smallest fraction of a coin."),(0,a.kt)("p",null,"One coin is equal to 10^12 atomic units."),(0,a.kt)("h2",{id:"json-rpc-busy-response"},"JSON RPC BUSY response"),(0,a.kt)("p",null,"All JSON RPC calls are served via http\\://RPC_IP:RPC_PORT/json_rpc URI."),(0,a.kt)("p",null,"Any request may receive a BUSY response if the daemon is synchronizing with the network. In such cases the user should repeat the request later."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": "0",\n  "jsonrpc": "2.0",\n  "result": {\n    "status": "BUSY"\n  }\n}\n')),(0,a.kt)("p",null,"Alternative blocks are not stored between subsequent runs of the daemon application. For a recently started daemon the list of known alternative blocks is always empty."),(0,a.kt)("h2",{id:"connect-legacy-json-api"},"Connect Legacy JSON API"),(0,a.kt)("p",null,"This API is legacy and not compliant with the JSON RPC specification. Please note that all methods in this section are accessed by http\\://RPC_IP:RPC_PORT/METOD_NAME URI."),(0,a.kt)("h2",{id:"connect-binary-rpc-api"},"Connect Binary RPC API"),(0,a.kt)("p",null,"Binary API uses binary protocol for communication, which is more compact and faster than JSON-API, especially when transferring large amounts of data. It was designed to communicate with a wallet application.",(0,a.kt)("br",{parentName:"p"}),"\n","You may want to use epee serialization, in particular",(0,a.kt)("br",{parentName:"p"}),"\n",(0,a.kt)("strong",{parentName:"p"},"epee::serialization::store_t_to_binary")," and ",(0,a.kt)("strong",{parentName:"p"},"epee::serialization::load_t_from_binary")," methods, to serialize your data before passing to API, and to deserialize upon retrieving from API. Alternatively, you may use ",(0,a.kt)("strong",{parentName:"p"},"epee::net_utils::invoke_http_bin_remote_command2")),(0,a.kt)("p",null,"All methods in this section are accessible by http\\://RPC_IP:RPC_PORT/METOD_NAME URI."))}u.isMDXComponent=!0}}]);