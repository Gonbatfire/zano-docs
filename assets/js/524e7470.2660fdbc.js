"use strict";(self.webpackChunkzano_docs=self.webpackChunkzano_docs||[]).push([[4241],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>b});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=l(r),f=a,b=d["".concat(s,".").concat(f)]||d[f]||u[f]||i;return r?n.createElement(b,o(o({ref:t},p),{},{components:r})):n.createElement(b,o({ref:t},p))}));function b(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=f;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[d]="string"==typeof e?e:a,o[1]=c;for(var l=2;l<i;l++)o[l]=r[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},5779:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var n=r(7462),a=(r(7294),r(3905));const i={},o=void 0,c={unversionedId:"build/rpc-api/daemon-rpc-api/validate_signature",id:"build/rpc-api/daemon-rpc-api/validate_signature",title:"validate_signature",description:"Validates a Schnorr signature for arbitrary data. The public key for verification is provided directly or retrieved using an associated alias.",source:"@site/docs/build/rpc-api/daemon-rpc-api/validate_signature.md",sourceDirName:"build/rpc-api/daemon-rpc-api",slug:"/build/rpc-api/daemon-rpc-api/validate_signature",permalink:"/docs/build/rpc-api/daemon-rpc-api/validate_signature",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"buildSidebar",previous:{title:"submitblock2",permalink:"/docs/build/rpc-api/daemon-rpc-api/submitblock2"},next:{title:"Wallet RPC Mode",permalink:"/docs/build/rpc-api/wallet-rpc"}},s={},l=[{value:"Request:",id:"request",level:3},{value:"Request description:",id:"request-description",level:3},{value:"Response:",id:"response",level:3},{value:"Response description:",id:"response-description",level:3}],p={toc:l},d="wrapper";function u(e){let{components:t,...r}=e;return(0,a.kt)(d,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Validates a Schnorr signature for arbitrary data. The public key for verification is provided directly or retrieved using an associated alias."),(0,a.kt)("p",null,"URL: ",(0,a.kt)("inlineCode",{parentName:"p"},"http:://127.0.0.1:11211/json_rpc")),(0,a.kt)("h3",{id:"request"},"Request:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": 0,\n  "jsonrpc": "2.0",\n  "method": "validate_signature",\n  "params": {\n    "alias": "sowle",\n    "buff": "SSBkaWRuJ3QgZXhwZWN0IGFueW9uZSB0byBkZWNyeXB0IHRoaXMgZGF0YSwgc2luY2UgaXQncyBqdXN0IGFuIGV4YW1wbGUuIEJ1dCB5b3UgZGVjcnlwdGVkIGl0ISBJJ20gYW1hemVkLg==",\n    "pkey": "",\n    "sig": "5c202d4bf82c2dd3c6354e2f02826ca72c797950dbe8db5bc5e3b2e60290a407ac2ef85bfc905ace8fe3b3819217084c00faf7237fee3ad2f6a7f662636cd20f"\n  }\n}\n')),(0,a.kt)("h3",{id:"request-description"},"Request description:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'    "alias": Alias to retrieve the associated public spend key if no explicit public key is provided for verification.\n    "buff": Base64 encoded data for which the signature is to be validated.\n    "pkey": Public key used for signature verification, encoded as a hexadecimal string. If null or not set, the public key is retrieved using the provided alias.\n    "sig": Schnorr signature to validate, encoded as a hexadecimal string.\n\n')),(0,a.kt)("h3",{id:"response"},"Response:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": 0,\n  "jsonrpc": "2.0",\n  "result": {\n    "status": "OK"\n  }\n}\n')),(0,a.kt)("h3",{id:"response-description"},"Response description:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'    "status": Status of the call.\n\n')),(0,a.kt)("sub",null,"Auto-doc built with: 2.1.8.415[f287916]"))}u.isMDXComponent=!0}}]);