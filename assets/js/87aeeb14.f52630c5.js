"use strict";(self.webpackChunkzano_docs=self.webpackChunkzano_docs||[]).push([[966],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>h});var a=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,o=function(e,t){if(null==e)return{};var r,a,o={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=a.createContext({}),f=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=f(e.components);return a.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var r=e.components,o=e.mdxType,n=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=f(r),u=o,h=p["".concat(l,".").concat(u)]||p[u]||d[u]||n;return r?a.createElement(h,i(i({ref:t},c),{},{components:r})):a.createElement(h,i({ref:t},c))}));function h(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var n=r.length,i=new Array(n);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:o,i[1]=s;for(var f=2;f<n;f++)i[f]=r[f];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}u.displayName="MDXCreateElement"},9643:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>n,metadata:()=>s,toc:()=>f});var a=r(7462),o=(r(7294),r(3905));const n={},i="Marketplace API guide",s={unversionedId:"build/marketplace/marketplace-api-guide",id:"build/marketplace/marketplace-api-guide",title:"Marketplace API guide",description:"The Zano blockchain will act as a platform for building distributed services. One of those services is our Marketplace, offering out of the box blockchain solutions.",source:"@site/docs/build/marketplace/marketplace-api-guide.md",sourceDirName:"build/marketplace",slug:"/build/marketplace/marketplace-api-guide",permalink:"/docs/build/marketplace/marketplace-api-guide",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"buildSidebar",previous:{title:"Starting the daemon and the wallet application as RPC server",permalink:"/docs/build/exchange-guidelines/starting-the-daemon-and-the-wallet-application-as-rpc-server"},next:{title:"Testnet builds",permalink:"/docs/build/testnet-resources/testnet-builds"}},l={},f=[{value:"Posting and updating offers.",id:"posting-and-updating-offers",level:3},{value:"Reading offers from blockchain.",id:"reading-offers-from-blockchain",level:3}],c={toc:f},p="wrapper";function d(e){let{components:t,...r}=e;return(0,o.kt)(p,(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"marketplace-api-guide"},"Marketplace API guide"),(0,o.kt)("p",null,"The Zano blockchain will act as a platform for building distributed services. One of those services is our Marketplace, offering out of the box blockchain solutions."),(0,o.kt)("p",null,"With the Zano Marketplace you create, update, or deactivate offers. Offers contain information about a user who is selling or buying something. As soon as an offer is published in the blockchain it is visible to everyone. This feature allows developers to build a decentralized online stores, based on offers and escrow contracts."),(0,o.kt)("p",null,"The Zano daemon has built-in service, that can show all active offers from the blockchain as multi indexed set with diverse filtering options. These offers are active for 2 weeks, after that, an offer needs to be re-posted."),(0,o.kt)("h3",{id:"posting-and-updating-offers"},"Posting and updating offers."),(0,o.kt)("p",null,"To be able to post/update offers you have to work with ",(0,o.kt)("strong",{parentName:"p"},"wallet API"),", since every operation over the offers has it's fee."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Posting offer.")),(0,o.kt)("p",null,"To post an offer should be used ",(0,o.kt)("a",{parentName:"p",href:"https://docs.zano.org/reference/marketplace_push_offer"},"marketplace_push_offer")," API method. This method takes as a parameter ",(0,o.kt)("a",{parentName:"p",href:"https://docs.zano.org/reference/using-the-zano-api-guide#marketplace-offer-structure-and-description"},'"Offer" structure')," and sends it with the carrier transaction to the blockchain. As soon as transaction got 10 confirmations it will appear in ",(0,o.kt)("a",{parentName:"p",href:"https://docs.zano.org/reference/get_offers_ex"},"search API")," of the daemon."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Updating offer.")),(0,o.kt)("p",null,"It's possible to update an offer if needed to make changes in any of the offer's fields. When wallet create a carrier transaction with updating offer, it includes proof that this update created by the owner of the original offer transaction. To perform update should be used ",(0,o.kt)("a",{parentName:"p",href:"https://docs.zano.org/reference/marketplace_push_update_offer"},"marketplace_push_update_offer")," wallet API method. In parameters should be specified original offer post transaction ID as a reference, and full details of the new updated version of the offer.\nUpdate procedure may be repeated many times, every time reference transaction id should be used from last update operation or from original posting transaction if there were no updates before."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Cancelling offer.")),(0,o.kt)("p",null,"It's also possible to mark an offer as inactive by calling ",(0,o.kt)("a",{parentName:"p",href:"https://docs.zano.org/reference/marketplace_cancel_offer"},"marketplace_cancel_offer"),". This API call confirm the authority of the owner same was as ",(0,o.kt)("a",{parentName:"p",href:"https://docs.zano.org/reference/marketplace_push_update_offer"},"marketplace_push_update_offer"),", so the caller must provide original offer's transaction id as a reference. After carrier transaction with this command is confirmed offer is no longer returned by ",(0,o.kt)("a",{parentName:"p",href:"https://docs.zano.org/reference/get_offers_ex"},"search API")," of the daemon."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Enumerating my offer")),(0,o.kt)("p",null,"To make easier management of the offers that belong to a particular wallet, we introduced ",(0,o.kt)("a",{parentName:"p",href:"https://docs.zano.org/reference/marketplace_get_offers_ex"},"marketplace_get_offers_ex")," API. This API return list of the active offers that had been posted from the current wallet. Diverse set of filtering and ordering options explained in documentation to this method."),(0,o.kt)("h3",{id:"reading-offers-from-blockchain"},"Reading offers from blockchain."),(0,o.kt)("p",null,"First of all, to activate Marketplace service in the daemon. By default, this service is deactivated to avoid performance waste.\nTo activate this service you have to run daemon with ",(0,o.kt)("strong",{parentName:"p"},'"--enable-offers-service"')," command line option."),(0,o.kt)("p",null,"To fetch active offers from blockchain should be used ",(0,o.kt)("a",{parentName:"p",href:"https://docs.zano.org/reference/get_offers_ex"},"marketplace_global_get_offers_ex")," method. This method based on the ",(0,o.kt)("a",{parentName:"p",href:"https://docs.zano.org/reference/using-the-zano-api-guide#marketplace-filter-structure-and-description"},"filter structure"),", which provide diverse set of options for filtering and ordering offers."),(0,o.kt)("p",null,"If you want basically to enumerate all offers in the blockchain you may want to use ",(0,o.kt)("strong",{parentName:"p"},"offset")," and ",(0,o.kt)("strong",{parentName:"p"},"limit")," options from filter. By adding ",(0,o.kt)("strong",{parentName:"p"},"limit")," amount to ",(0,o.kt)("strong",{parentName:"p"},"offset")," in every next method call, you can subsequently fetch all offers from blockchain, even if there are millions of it."))}d.isMDXComponent=!0}}]);