"use strict";(self.webpackChunkzano_docs=self.webpackChunkzano_docs||[]).push([[1126],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>b});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},d="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=s(n),u=o,b=d["".concat(l,".").concat(u)]||d[u]||h[u]||a;return n?r.createElement(b,i(i({ref:t},p),{},{components:n})):r.createElement(b,i({ref:t},p))}));function b(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=u;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[d]="string"==typeof e?e:o,i[1]=c;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5709:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>c,toc:()=>s});var r=n(7462),o=(n(7294),n(3905));const a={},i=void 0,c={unversionedId:"build/rpc-api/daemon-rpc-api/getblockheaderbyhash",id:"build/rpc-api/daemon-rpc-api/getblockheaderbyhash",title:"getblockheaderbyhash",description:"Retrieves the block header information for a given block hash.",source:"@site/docs/build/rpc-api/daemon-rpc-api/getblockheaderbyhash.md",sourceDirName:"build/rpc-api/daemon-rpc-api",slug:"/build/rpc-api/daemon-rpc-api/getblockheaderbyhash",permalink:"/docs/build/rpc-api/daemon-rpc-api/getblockheaderbyhash",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"buildSidebar",previous:{title:"getblockcount",permalink:"/docs/build/rpc-api/daemon-rpc-api/getblockcount"},next:{title:"getblockheaderbyheight",permalink:"/docs/build/rpc-api/daemon-rpc-api/getblockheaderbyheight"}},l={},s=[{value:"Request:",id:"request",level:3},{value:"Request description:",id:"request-description",level:3},{value:"Response:",id:"response",level:3},{value:"Response description:",id:"response-description",level:3}],p={toc:s},d="wrapper";function h(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Retrieves the block header information for a given block hash."),(0,o.kt)("p",null,"URL: ",(0,o.kt)("inlineCode",{parentName:"p"},"http:://127.0.0.1:11211/json_rpc")),(0,o.kt)("h3",{id:"request"},"Request:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": 0,\n  "jsonrpc": "2.0",\n  "method": "getblockheaderbyhash",\n  "params": {\n    "hash": "a1b4359c02985720b0cf542678e08f0d4075e518fbd0cd54bd280269545e0e6f"\n  }\n}\n')),(0,o.kt)("h3",{id:"request-description"},"Request description:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'    "hash": The hash of the block for which the header information is being requested.\n\n')),(0,o.kt)("h3",{id:"response"},"Response:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": 0,\n  "jsonrpc": "2.0",\n  "result": {\n    "block_header": {\n      "depth": 0,\n      "difficulty": "1849593878843995770114",\n      "hash": "f5df39c4b1590394976aa6e72f04df7836e22dbdfc1e6f61f6cc1b624d83cd94",\n      "height": 2697404,\n      "major_version": 3,\n      "minor_version": 0,\n      "nonce": 0,\n      "orphan_status": false,\n      "prev_hash": "a1b4359c02985720b0cf542678e08f0d4075e518fbd0cd54bd280269545e0e6f",\n      "reward": 0,\n      "timestamp": 1719588270\n    },\n    "status": "OK"\n  }\n}\n')),(0,o.kt)("h3",{id:"response-description"},"Response description:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'    "block_header": Detailed header information of the block.\n      "depth": Depth of the block in the blockchain. Depth 0 indicates the most recent block.\n      "difficulty": Network difficulty target that the block met.\n      "hash": Hash of the block.\n      "height": Height of the block in the blockchain.\n      "major_version": Major version of the block.\n      "minor_version": Minor version of the block.\n      "nonce": Nonce used for generating the block to meet the network difficulty.\n      "orphan_status": Indicates if the block is an orphan (true) or a normal block (false).\n      "prev_hash": Hash of the previous block in the chain.\n      "reward": Total mining reward of the block including transaction fees (if applicable).\n      "timestamp": Timestamp of the block creation.\n    "status": Status of the call.\n\n')),(0,o.kt)("sub",null,"Auto-doc built with: 2.1.8.415[f287916]"))}h.isMDXComponent=!0}}]);