"use strict";(self.webpackChunkzano_docs=self.webpackChunkzano_docs||[]).push([[5799],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>v});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),u=c(n),f=o,v=u["".concat(p,".").concat(f)]||u[f]||d[f]||a;return n?r.createElement(v,s(s({ref:t},l),{},{components:n})):r.createElement(v,s({ref:t},l))}));function v(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=f;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[u]="string"==typeof e?e:o,s[1]=i;for(var c=2;c<a;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},6665:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const a={},s=void 0,i={unversionedId:"build/rpc-api/daemon-rpc-api/get_votes",id:"build/rpc-api/daemon-rpc-api/get_votes",title:"get_votes",description:"Get votes' results from the given block range.",source:"@site/docs/build/rpc-api/daemon-rpc-api/get_votes.md",sourceDirName:"build/rpc-api/daemon-rpc-api",slug:"/build/rpc-api/daemon-rpc-api/get_votes",permalink:"/zano-docs/docs/build/rpc-api/daemon-rpc-api/get_votes",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"buildSidebar",previous:{title:"get_tx_pool.bin",permalink:"/zano-docs/docs/build/rpc-api/daemon-rpc-api/get_tx_pool.bin"},next:{title:"getblockcount",permalink:"/zano-docs/docs/build/rpc-api/daemon-rpc-api/getblockcount"}},p={},c=[{value:"Request:",id:"request",level:3},{value:"Request description:",id:"request-description",level:3},{value:"Response:",id:"response",level:3},{value:"Response description:",id:"response-description",level:3}],l={toc:c},u="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Get votes' results from the given block range."),(0,o.kt)("p",null,"URL: ",(0,o.kt)("inlineCode",{parentName:"p"},"http:://127.0.0.1:11211/json_rpc")),(0,o.kt)("h3",{id:"request"},"Request:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": 0,\n  "jsonrpc": "2.0",\n  "method": "get_votes",\n  "params": {\n    "h_end": 40000,\n    "h_start": 0\n  }\n}\n')),(0,o.kt)("h3",{id:"request-description"},"Request description:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'    "h_end": End of the block range to serach in (excluding).\n    "h_start": Start of the block range to search in (including).\n\n')),(0,o.kt)("h3",{id:"response"},"Response:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": 0,\n  "jsonrpc": "2.0",\n  "result": {\n    "error_code": "",\n    "status": "OK",\n    "votes": {\n      "total_pos_blocks": 87482,\n      "votes": [{\n        "no": 37,\n        "proposal_id": "ZAP999",\n        "yes": 42\n      },{\n        "no": 37,\n        "proposal_id": "ZAP999",\n        "yes": 42\n      }]\n    }\n  }\n}\n')),(0,o.kt)("h3",{id:"response-description"},"Response description:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'    "error_code": Error code, if any.\n    "status": Status of the call.\n    "votes": Found votes in the given range.\n      "total_pos_blocks": Number of blocks in a given range.\n      "votes": Result of votes in a given range.\n        "no": Number of negative votes.\n        "proposal_id": ID of the proposal.\n        "yes": Nubmer of positve votes.\n        "no": Number of negative votes.\n        "proposal_id": ID of the proposal.\n        "yes": Nubmer of positve votes.\n\n')),(0,o.kt)("sub",null,"Auto-doc built with: 2.1.8.415[f287916]"))}d.isMDXComponent=!0}}]);