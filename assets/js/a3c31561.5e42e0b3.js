"use strict";(self.webpackChunkzano_docs=self.webpackChunkzano_docs||[]).push([[8628],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>b});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=c(n),m=r,b=u["".concat(l,".").concat(m)]||u[m]||p[m]||o;return n?a.createElement(b,i(i({ref:t},d),{},{components:n})):a.createElement(b,i({ref:t},d))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:r,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9962:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const o={},i=void 0,s={unversionedId:"build/rpc-api/daemon-rpc-api/getblocktemplate",id:"build/rpc-api/daemon-rpc-api/getblocktemplate",title:"getblocktemplate",description:"Generates a block template for mining, intended for both PoW and PoS types of blocks based on the provided parameters.",source:"@site/docs/build/rpc-api/daemon-rpc-api/getblocktemplate.md",sourceDirName:"build/rpc-api/daemon-rpc-api",slug:"/build/rpc-api/daemon-rpc-api/getblocktemplate",permalink:"/zano-docs/docs/build/rpc-api/daemon-rpc-api/getblocktemplate",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"buildSidebar",previous:{title:"getblocks.bin",permalink:"/zano-docs/docs/build/rpc-api/daemon-rpc-api/getblocks.bin"},next:{title:"getheight",permalink:"/zano-docs/docs/build/rpc-api/daemon-rpc-api/getheight"}},l={},c=[{value:"Request:",id:"request",level:3},{value:"Request description:",id:"request-description",level:3},{value:"Response:",id:"response",level:3},{value:"Response description:",id:"response-description",level:3}],d={toc:c},u="wrapper";function p(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Generates a block template for mining, intended for both PoW and PoS types of blocks based on the provided parameters."),(0,r.kt)("p",null,"URL: ",(0,r.kt)("inlineCode",{parentName:"p"},"http:://127.0.0.1:11211/json_rpc")),(0,r.kt)("h3",{id:"request"},"Request:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": 0,\n  "jsonrpc": "2.0",\n  "method": "getblocktemplate",\n  "params": {\n    "explicit_transaction": "5fa8eaaf231a305053260ff91d69c6ef1ecbd0f5",\n    "extra_text": "OMG, you can\'t just ask people why they\'re PoW-maxi",\n    "pe": {\n      "amount": 0,\n      "block_timestamp": 0,\n      "g_index": 0,\n      "keyimage": "\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000",\n      "stake_unlock_time": 0,\n      "tx_id": "0000000000000000000000000000000000000000000000000000000000000000",\n      "tx_out_index": 0\n    },\n    "pos_block": false,\n    "stakeholder_address": "",\n    "wallet_address": "ZxCSpsGGeJsS8fwvQ4HktDU3qBeauoJTR6j73jAWWZxFXdF7XTbGm4YfS2kXJmAP4Rf5BVsSQ9iZ45XANXEYsrLN2L2W77dH7"\n  }\n}\n')),(0,r.kt)("h3",{id:"request-description"},"Request description:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'    "explicit_transaction": A transaction blob that must be explicitly included in the block.\n    "extra_text": Arbitrary data added to the extra field of the miner transaction.\n    "pe": PoS entry details, relevant only for PoS block generation.\n    "pos_block": Flag indicating whether the block is a PoS block.\n    "stakeholder_address": Address where the stake is returned for PoS blocks (usually the same as \'wallet_address\').\n    "wallet_address": Address where mining rewards will be deposited.\n\n')),(0,r.kt)("h3",{id:"response"},"Response:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": 0,\n  "jsonrpc": "2.0",\n  "result": {\n    "block_reward": 1000000000000,\n    "block_reward_without_fee": 1000000000000,\n    "blocktemplate_blob": "030000000000000000ae73338b792......6258a2b5ee340700",\n    "difficulty": "12936195379842",\n    "height": 2555002,\n    "miner_tx_tgc": {\n      "amount_blinding_masks": "",\n      "amount_blinding_masks_sum": "0000000000000000000000000000000000000000000000000000000000000000",\n      "amount_commitments": "",\n      "amount_commitments_sum": "00000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",\n      "amounts": "",\n      "ao_amount_blinding_mask": "0000000000000000000000000000000000000000000000000000000000000000",\n      "ao_amount_commitment": "00000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",\n      "ao_asset_id": "0000000000000000000000000000000000000000000000000000000000000000",\n      "ao_asset_id_pt": "00000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",\n      "ao_commitment_in_outputs": "00",\n      "asset_id_blinding_mask_x_amount_sum": "0000000000000000000000000000000000000000000000000000000000000000",\n      "asset_id_blinding_masks": "",\n      "asset_ids": "",\n      "blinded_asset_ids": "",\n      "pseudo_out_amount_blinding_masks_sum": "0000000000000000000000000000000000000000000000000000000000000000",\n      "pseudo_out_amount_commitments_sum": "00000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",\n      "pseudo_outs_blinded_asset_ids": "",\n      "pseudo_outs_plus_real_out_blinding_masks": "",\n      "real_in_asset_id_blinding_mask_x_amount_sum": "0000000000000000000000000000000000000000000000000000000000000000",\n      "real_zc_ins_asset_ids": "",\n      "tx_key": "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",\n      "tx_pub_key_p": "00000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"\n    },\n    "prev_hash": "ae73338b7927df71b6ed477937625c230172219306750ba97995fb5109dda703",\n    "seed": "0518e1373ff88ccabb28493cac10cb0731313135d880dae0d846be6016ab9acf",\n    "status": "OK",\n    "txs_fee": 0\n  }\n}\n')),(0,r.kt)("h3",{id:"response-description"},"Response description:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'    "block_reward": Total block reward, including transaction fees if they are given to the miner (legacy), or the base reward if fees are burnt (current state).\n    "block_reward_without_fee": Base block reward excluding any transaction fees.\n    "blocktemplate_blob": Serialized block template blob.\n    "difficulty": The mining difficulty targeted by the block template.\n    "height": The height of the block template in the blockchain.\n    "miner_tx_tgc": Miner transaction generation context. Intended for PoS blocks and Zarcanum.\n    "prev_hash": Hash of the previous block in the chain.\n    "seed": Seed value for the ProgPoWZ mining algorithm\'s epoch.\n    "status": Status of the call.\n    "txs_fee": Total fees from transactions included in the block.\n\n')),(0,r.kt)("sub",null,"Auto-doc built with: 2.1.8.415[f287916]"))}p.isMDXComponent=!0}}]);