"use strict";(self.webpackChunkzano_docs=self.webpackChunkzano_docs||[]).push([[36],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),u=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=u(e.components);return o.createElement(c.Provider,{value:t},e.children)},d="mdxType",l={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=u(n),m=r,f=d["".concat(c,".").concat(m)]||d[m]||l[m]||a;return n?o.createElement(f,s(s({ref:t},p),{},{components:n})):o.createElement(f,s({ref:t},p))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,s=new Array(a);s[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[d]="string"==typeof e?e:r,s[1]=i;for(var u=2;u<a;u++)s[u]=n[u];return o.createElement.apply(null,s)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9062:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>l,frontMatter:()=>a,metadata:()=>i,toc:()=>u});var o=n(7462),r=(n(7294),n(3905));const a={},s=void 0,i={unversionedId:"build/rpc-api/daemon-rpc-api/getrandom_outs3",id:"build/rpc-api/daemon-rpc-api/getrandom_outs3",title:"getrandom_outs3",description:"Version 3 of the command to retrieve random decoy outputs for specified amounts, focusing on either pre-zarcanum or post-zarcanum zones based on the amount value.",source:"@site/docs/build/rpc-api/daemon-rpc-api/getrandom_outs3.md",sourceDirName:"build/rpc-api/daemon-rpc-api",slug:"/build/rpc-api/daemon-rpc-api/getrandom_outs3",permalink:"/zano-docs/docs/build/rpc-api/daemon-rpc-api/getrandom_outs3",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"buildSidebar",previous:{title:"getrandom_outs3.bin",permalink:"/zano-docs/docs/build/rpc-api/daemon-rpc-api/getrandom_outs3.bin"},next:{title:"gettransactions",permalink:"/zano-docs/docs/build/rpc-api/daemon-rpc-api/gettransactions"}},c={},u=[{value:"Request:",id:"request",level:3},{value:"Request description:",id:"request-description",level:3},{value:"Response:",id:"response",level:3},{value:"Response description:",id:"response-description",level:3}],p={toc:u},d="wrapper";function l(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Version 3 of the command to retrieve random decoy outputs for specified amounts, focusing on either pre-zarcanum or post-zarcanum zones based on the amount value."),(0,r.kt)("p",null,"URL: ",(0,r.kt)("inlineCode",{parentName:"p"},"http:://127.0.0.1:11211/json_rpc")),(0,r.kt)("h3",{id:"request"},"Request:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": 0,\n  "jsonrpc": "2.0",\n  "method": "getrandom_outs3",\n  "params": {\n    "amounts": [{\n      "amount": 0,\n      "global_offsets": [1,3,5928,2811]\n    }],\n    "coinbase_percents": 15,\n    "height_upper_limit": 2555000,\n    "use_forced_mix_outs": false\n  }\n}\n')),(0,r.kt)("h3",{id:"request-description"},"Request description:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'    "amounts": List of amount distributions specifying where to look for decoys, based on old bare outputs or ZC outputs.\n      "amount": If set to 0, only ZC outputs are considered. If nonzero, only old bare outputs are considered.\n      "global_offsets": List of global indices for picking decoys. Each index corresponds to a potential decoy output.\n    "coinbase_percents": Specifies the estimated percentage of coinbase outputs to be included in the decoy sets, ranging from 0 to 100.\n    "height_upper_limit": Maximum blockchain height from which decoys can be taken. If nonzero, decoys must be at this height or older.\n    "use_forced_mix_outs": If true, only outputs with a \'mix_attr\' greater than 0 are used as decoys.\n\n')),(0,r.kt)("h3",{id:"response"},"Response:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": 0,\n  "jsonrpc": "2.0",\n  "result": {\n    "outs": [{\n      "amount": 10000000000\n    }],\n    "status": "OK"\n  }\n}\n')),(0,r.kt)("h3",{id:"response-description"},"Response description:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'    "outs": List of \'outs_for_amount\' structures, each containing decoys for a specific amount.\n      "amount": The amount for which decoys are returned.\n    "status": Status of the call.\n\n')),(0,r.kt)("sub",null,"Auto-doc built with: 2.1.8.415[f287916]"))}l.isMDXComponent=!0}}]);