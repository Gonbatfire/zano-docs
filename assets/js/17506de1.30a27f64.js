"use strict";(self.webpackChunkzano_docs=self.webpackChunkzano_docs||[]).push([[923],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>g});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),p=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=p(e.components);return r.createElement(s.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(t),m=o,g=u["".concat(s,".").concat(m)]||u[m]||d[m]||a;return t?r.createElement(g,l(l({ref:n},c),{},{components:t})):r.createElement(g,l({ref:n},c))}));function g(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,l=new Array(a);l[0]=m;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i[u]="string"==typeof e?e:o,l[1]=i;for(var p=2;p<a;p++)l[p]=t[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},8380:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var r=t(7462),o=(t(7294),t(3905));const a={sidebar_position:2},l="How to call API",i={unversionedId:"build/rpc-api/how-to-call-api",id:"build/rpc-api/how-to-call-api",title:"How to call API",description:"Making API calls to the Zano Daemon and Wallet is easy, below we'll give you an example to help you get started building on Zano.",source:"@site/docs/build/rpc-api/how-to-call-api.md",sourceDirName:"build/rpc-api",slug:"/build/rpc-api/how-to-call-api",permalink:"/docs/build/rpc-api/how-to-call-api",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"buildSidebar",previous:{title:"Overview",permalink:"/docs/build/rpc-api/overview"},next:{title:"Daemon RPC Mode",permalink:"/docs/build/rpc-api/daemon-rpc"}},s={},p=[{value:"Using Insomnia",id:"using-insomnia",level:3},{value:"Using NodeJS",id:"using-nodejs",level:3},{value:"Summary",id:"summary",level:3}],c={toc:p},u="wrapper";function d(e){let{components:n,...t}=e;return(0,o.kt)(u,(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"how-to-call-api"},"How to call API"),(0,o.kt)("p",null,"Making API calls to the Zano Daemon and Wallet is easy, below we'll give you an example to help you get started building on Zano."),(0,o.kt)("h3",{id:"using-insomnia"},"Using Insomnia"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://insomnia.rest/"},"Insomnia")," is a program (similar to ",(0,o.kt)("a",{parentName:"p",href:"https://www.postman.com/"},"postman"),") that helps you design, debug, and test APIs, heres an example API call to the Zano Daemon using Insomnia."),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://files.readme.io/d5fd42e-insomnia_call.png",alt:null})),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"using-nodejs"},"Using NodeJS"),(0,o.kt)("p",null,"Below is an example of the same API call using NodeJS:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'const axios = require("axios");\n\nasync function callAPI() {\n  try {\n    const url = "http://127.0.0.1:11211/json_rpc";\n    const requestData = {\n      jsonrpc: "2.0",\n      id: 0,\n      method: "getbalance",\n    };\n\n    const response = await axios.post(url, requestData);\n    console.log(response.data);\n    // Process the response data as needed\n  } catch (error) {\n    console.error("Error:", error.message);\n  }\n}\n\ncallAPI();\n')),(0,o.kt)("h3",{id:"summary"},"Summary"),(0,o.kt)("p",null,"When running the Daemon and Wallet in RPC mode locally, the following URL, whether using something like Insomnia or NodeJS or some other language, you access the daemon with the following URL:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"http://127.0.0.1:11211/json_rpc\n")),(0,o.kt)("p",null,"Have fun building on Zano!"))}d.isMDXComponent=!0}}]);