"use strict";(self.webpackChunkzano_docs=self.webpackChunkzano_docs||[]).push([[3787],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=o.createContext({}),d=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=d(e.components);return o.createElement(s.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=d(n),m=a,f=c["".concat(s,".").concat(m)]||c[m]||u[m]||r;return n?o.createElement(f,i(i({ref:t},p),{},{components:n})):o.createElement(f,i({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:a,i[1]=l;for(var d=2;d<r;d++)i[d]=n[d];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3950:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var o=n(7462),a=(n(7294),n(3905));const r={sidebar_position:1},i="Overview",l={unversionedId:"build/rpc-api/overview",id:"build/rpc-api/overview",title:"Overview",description:"Welcome to the Zano API documentation! As a digital currency enthusiast, developer, or end user, we know how important it is for you to have a clear, comprehensive guide to our API. That's why we've designed our documentation to be as accessible and easy to understand as possible.",source:"@site/docs/build/rpc-api/overview.md",sourceDirName:"build/rpc-api",slug:"/build/rpc-api/overview",permalink:"/zano-docs/docs/build/rpc-api/overview",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"buildSidebar",previous:{title:"List of Libraries",permalink:"/zano-docs/docs/build/libraries/overview"},next:{title:"How to call API",permalink:"/zano-docs/docs/build/rpc-api/how-to-call-api"}},s={},d=[{value:"Formatting example",id:"formatting-example",level:2},{value:"Request",id:"request",level:3},{value:"Response",id:"response",level:3},{value:"Running Daemon and Wallet in RPC mode (brief guide)",id:"running-daemon-and-wallet-in-rpc-mode-brief-guide",level:2},{value:"How to run Daemon in RPC mode",id:"how-to-run-daemon-in-rpc-mode",level:3},{value:"Daemon flags",id:"daemon-flags",level:3},{value:"How to run Wallet in RPC mode",id:"how-to-run-wallet-in-rpc-mode",level:3},{value:"Daemon flags",id:"daemon-flags-1",level:3}],p={toc:d},c="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"overview"},"Overview"),(0,a.kt)("p",null,"Welcome to the Zano API documentation! As a digital currency enthusiast, developer, or end user, we know how important it is for you to have a clear, comprehensive guide to our API. That's why we've designed our documentation to be as accessible and easy to understand as possible."),(0,a.kt)("p",null,"Our aim with this documentation is to help you harness the full potential of Zano's feature-rich platform, allowing you to integrate, innovate, and build on top of Zano's powerful privacy-oriented blockchain."),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Read more on the ",(0,a.kt)("a",{parentName:"p",href:"https://www.jsonrpc.org/specification"},"JSON-RPC 2.0 Specification"))),(0,a.kt)("h2",{id:"formatting-example"},"Formatting example"),(0,a.kt)("p",null,"Each API endpoint will have an example of the required JSON body to be sent with the POST request, an example response and additional information such as types and additional information regarding the parameters sent and received when necessary."),(0,a.kt)("p",null,"Additionally, endpoints will be grouped according to whether they call the Daemon or the wallet as well as the scope in which they function such as Marketplace, confidential assets, contracts etc."),(0,a.kt)("h3",{id:"request"},"Request"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "id": 0,\n  "method": "getbalance"\n}\n')),(0,a.kt)("h3",{id:"response"},"Response"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": 0,\n  "jsonrpc": "2.0",\n  "result": {\n    "balance": 50000000033,\n    "unlocked_balance": 50000000033\n  }\n}\n')),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"running-daemon-and-wallet-in-rpc-mode-brief-guide"},"Running Daemon and Wallet in RPC mode (brief guide)"),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"All examples below are based on the assumption that the daemon is listening for RPC at 127.0.0.1:11211")),(0,a.kt)("p",null,"In order to send JSON requests, both the Zano Daemon and Wallet must be ran in RPC mode"),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"For additional info on RPC mode, for wallet visit ",(0,a.kt)("a",{parentName:"p",href:"wallet-rpc"},"Wallet RPC Mode"),", and ",(0,a.kt)("a",{parentName:"p",href:"daemon-rpc"},"Daemon RPC Mode"))),(0,a.kt)("h3",{id:"how-to-run-daemon-in-rpc-mode"},"How to run Daemon in RPC mode"),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"In order to interact with the Marketplace API, you must include the following flag: '--enable-offers-service'")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-Text",metastring:"console",console:!0},"./zanod --rpc-bind-ip 127.0.0.1 --rpc-bind-port 11211 --enable-offers-service\n")),(0,a.kt)("h3",{id:"daemon-flags"},"Daemon flags"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"rpc-bind-ip \u2014 IP address to bind RPC server to (127.0.0.1 will be used if not specified);"),(0,a.kt)("li",{parentName:"ul"},"rpc-bind-port \u2014 TCP port for RPC server (11211 is default);")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"how-to-run-wallet-in-rpc-mode"},"How to run Wallet in RPC mode"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-Text",metastring:"console",console:!0},"./simplewallet --wallet-file example.wallet --password password --rpc-bind-ip 127.0.0.1 --rpc-bind-port 11212 --daemon-address 127.0.0.1:11211\n")),(0,a.kt)("h3",{id:"daemon-flags-1"},"Daemon flags"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"wallet-file - name of wallet file to use"),(0,a.kt)("li",{parentName:"ul"},"password - wallets password"),(0,a.kt)("li",{parentName:"ul"},"rpc-bind-port - TCP port for wallet RPC server"),(0,a.kt)("li",{parentName:"ul"},"rpc-bind-ip - IP and PORT of the daemon")))}u.isMDXComponent=!0}}]);