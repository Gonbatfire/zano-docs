"use strict";(self.webpackChunkzano_docs=self.webpackChunkzano_docs||[]).push([[6072],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},f=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(n),f=r,m=u["".concat(l,".").concat(f)]||u[f]||d[f]||o;return n?a.createElement(m,i(i({ref:t},p),{},{components:n})):a.createElement(m,i({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=f;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:r,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},4565:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const o={sidebar_position:1},i="Overview",s={unversionedId:"build/confidential-assets/overview",id:"build/confidential-assets/overview",title:"Overview",description:"Confidential Assets are privacy tokens with all the features of native Zano coin",source:"@site/docs/build/confidential-assets/overview.md",sourceDirName:"build/confidential-assets",slug:"/build/confidential-assets/overview",permalink:"/zano-docs/docs/build/confidential-assets/overview",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"buildSidebar",previous:{title:"update_asset",permalink:"/zano-docs/docs/build/rpc-api/wallet-rpc-api/update_asset"},next:{title:"Ionic Swaps Guide",permalink:"/zano-docs/docs/build/confidential-assets/ionic-swaps"}},l={},c=[{value:"Asset Methods",id:"asset-methods",level:3},{value:"Asset Creation Example",id:"asset-creation-example",level:3}],p={toc:c},u="wrapper";function d(e){let{components:t,...o}=e;return(0,r.kt)(u,(0,a.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"overview"},"Overview"),(0,r.kt)("p",null,"Confidential Assets are privacy tokens with all the features of native Zano coin"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Currently asset creation is only supported on Zano Testnet and will be brought to mainnet with upcoming Zarcanum hardfork")),(0,r.kt)("p",null,"Confidential Assets Commands are availabe trough CLI interface (simplewallet)"),(0,r.kt)("h3",{id:"asset-methods"},"Asset Methods"),(0,r.kt)("p",null,"Full list of supported commands available in the Methods section. Assets can be created, minted, burned, whitelisted and updated (only metadata)"),(0,r.kt)("h3",{id:"asset-creation-example"},"Asset Creation Example"),(0,r.kt)("p",null,"To deploy a new asset on the Zano blockchain, you need to prepare a JSON-formatted file with asset parameters. Here\u2019s an example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{\n  "ticker": "CT",\n  "full_name": "Confidential token",\n  "total_max_supply": 100000000000000000,\n  "current_supply": 1000000000000000,\n  "decimal_point": 12,\n  "meta_info": ""\n}\n')),(0,r.kt)("p",null,"Then run the following command specifying the route to the file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"deploy_new_asset <asset specs file location>\n")),(0,r.kt)("p",null,"You should see a confirmation message upon successful execution"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"alt launch-asset-confirmation-message",src:n(8561).Z,title:"launch-asset-confirmation-message",width:"968",height:"189"})))}d.isMDXComponent=!0},8561:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/launch-asset-confirmation-message-5ff38a54689fb7d098aa787d631dba76.png"}}]);