"use strict";(self.webpackChunkzano_docs=self.webpackChunkzano_docs||[]).push([[2025],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>f});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function d(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var o=n.createContext({}),p=function(e){var t=n.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(o.Provider,{value:t},e.children)},l="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,c=d(e,["components","mdxType","originalType","parentName"]),l=p(r),m=a,f=l["".concat(o,".").concat(m)]||l[m]||u[m]||i;return r?n.createElement(f,s(s({ref:t},c),{},{components:r})):n.createElement(f,s({ref:t},c))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,s=new Array(i);s[0]=m;var d={};for(var o in t)hasOwnProperty.call(t,o)&&(d[o]=t[o]);d.originalType=e,d[l]="string"==typeof e?e:a,s[1]=d;for(var p=2;p<i;p++)s[p]=r[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},6293:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>d,toc:()=>p});var n=r(7462),a=(r(7294),r(3905));const i={},s=void 0,d={unversionedId:"build/rpc-api/daemon-rpc-api/get_integrated_address",id:"build/rpc-api/daemon-rpc-api/get_integrated_address",title:"get_integrated_address",description:"Make integrated address from regular address",source:"@site/docs/build/rpc-api/daemon-rpc-api/get_integrated_address.md",sourceDirName:"build/rpc-api/daemon-rpc-api",slug:"/build/rpc-api/daemon-rpc-api/get_integrated_address",permalink:"/docs/build/rpc-api/daemon-rpc-api/get_integrated_address",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"buildSidebar",previous:{title:"get_est_height_from_date",permalink:"/docs/build/rpc-api/daemon-rpc-api/get_est_height_from_date"},next:{title:"get_main_block_details",permalink:"/docs/build/rpc-api/daemon-rpc-api/get_main_block_details"}},o={},p=[{value:"Request:",id:"request",level:3},{value:"Request description:",id:"request-description",level:3},{value:"Response:",id:"response",level:3},{value:"Response description:",id:"response-description",level:3}],c={toc:p},l="wrapper";function u(e){let{components:t,...r}=e;return(0,a.kt)(l,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Make integrated address from regular address"),(0,a.kt)("p",null,"URL: ",(0,a.kt)("inlineCode",{parentName:"p"},"http:://127.0.0.1:11211/json_rpc")),(0,a.kt)("h3",{id:"request"},"Request:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": 0,\n  "jsonrpc": "2.0",\n  "method": "get_integrated_address",\n  "params": {\n    "payment_id": "1dfe5a88ff9effb3",\n    "regular_address": "ZxCSpsGGeJsS8fwvQ4HktDU3qBeauoJTR6j73jAWWZxFXdF7XTbGm4YfS2kXJmAP4Rf5BVsSQ9iZ45XANXEYsrLN2L2W77dH7"\n  }\n}\n')),(0,a.kt)("h3",{id:"request-description"},"Request description:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'    "payment_id": Hex-encoded Payment ID to be associated with the this address. If empty then wallet would generate new payment id using system random library\n    "regular_address": Zano wallet address to be used as a base for integrated address\n\n')),(0,a.kt)("h3",{id:"response"},"Response:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": 0,\n  "jsonrpc": "2.0",\n  "result": {\n    "integrated_address": "iZ2EMyPD7g28hgBfboZeCENaYrHBYZ1bLFi5cgWvn4WJLaxfgs4kqG6cJi9ai2zrXWSCpsvRXit14gKjeijx6YPCLJEv6Fx4rVm1hdAGQFis",\n    "payment_id": "1dfe5a88ff9effb3"\n  }\n}\n')),(0,a.kt)("h3",{id:"response-description"},"Response description:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'    "integrated_address": Integrated address combining a standard address and payment ID, if applicable.\n    "payment_id": Payment ID associated with the this address.\n\n')),(0,a.kt)("sub",null,"Auto-doc built with: 2.1.8.415[f287916]"))}u.isMDXComponent=!0}}]);